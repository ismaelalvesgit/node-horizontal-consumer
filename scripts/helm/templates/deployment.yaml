{{- if eq .Values.deploy.type "DEPLOYMENT" }}
{{- range .Values.jobs }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ $.Release.Name }}-{{ .name }}-deployment"
  labels:
    app: {{ .name }}-job
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  {{- if or $.Values.namespace $.Release.Namespace  }}
  namespace: {{ or $.Values.namespace $.Release.Namespace }}
  {{- end}}
  annotations: {{ include "service.annotations" $ | nindent 4 }}
spec:
  replicas: {{ $.Values.replicaCount }}
  minReadySeconds: 100
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels: 
      app: {{ .name }}-job
      {{- if .labels.jobgroup }}
      jobgroup: {{ .labels.jobgroup }}
      {{- end }}
      app.kubernetes.io/managed-by: {{ $.Release.Service }}
  template:
    metadata:
      labels: 
        app: {{ .name }}-job
        {{- if .labels.jobgroup }}
        jobgroup: {{ .labels.jobgroup }}
        {{- end }}
        app.kubernetes.io/managed-by: {{ $.Release.Service }}
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      containers:
      - name: {{ .name }}-deployment
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        env:
          {{- range $key, $value := $.Values.env }}
          {{- if $value }}
          - name: {{ $key | upper }}
            value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          {{- range $key, $value := $.Values.secret }}
          {{- if $value }}
          - name: {{ $key | upper }}
            valueFrom:
              secretKeyRef:
                name: {{ include "service.fullname" $ }}
                key: {{ $key | upper }}
          {{- end }}
          {{- end }}
        command:
            - node
            - src/index
            - {{ .command }}
        livenessProbe:
          exec:
            command:
              - node
              - src/index
              - healthcheck
          initialDelaySeconds: 35
          timeoutSeconds: 60
          failureThreshold: 6
          periodSeconds: 60
        readinessProbe:
          exec:
            command:
              - node
              - src/index
              - healthcheck
          initialDelaySeconds: 35
          timeoutSeconds: 60
          failureThreshold: 6
          periodSeconds: 60
        resources:
          requests:
            memory: "{{ $.Values.resources.requests.memory }}"
            cpu: {{ $.Values.resources.requests.cpu }}
          limits:
            memory: "{{ $.Values.resources.limits.memory }}"
            cpu: {{ $.Values.resources.limits.cpu }}
        securityContext:
          privileged: true
          runAsUser: 0
---
{{- end }}
{{- end }}